from mininet.topo import Topo
from mininet.net import Mininet
from mininet.node import DefaultController, RemoteController
from mininet.log import setLogLevel
from mininet.cli import CLI
import argparse

KALI_OUTSIDER = "205.174.165.73"
WIN_OUTSIDER_1 = "205.174.165.69"
WIN_OUTSIDER_2 = "205.174.165.70"
WIN_OUTSIDER_3 = "205.174.165.71"

FIREWALL = {"local": "172.16.0.1", "public": "205.174.165.80"}

DNS_DC_SERVER = "192.168.10.3"
WEB_SERVER_16_PUBLIC = {"local": "192.168.10.50", "public": "205.174.165.68"}

UBUNTU_SERVER_12_PUBLIC = {"local": "192.168.10.51", "public": "205.174.165.66"}

UBUNTU_14_32B = "192.168.10.19"
UBUNTU_14_64B = "192.168.10.17"
UBUNTU_16_32B = "192.168.10.16"
UBUNTU_16_64B = "192.168.10.12"
WIN_7_PRO_64B = "192.168.10.9"
WIN_8_64B = "192.168.10.5"
WIN_VISTA_64B = "192.168.10.8"
WIN_10_PRO_32B = "192.168.10.14"
WIN_10_64B = "192.168.10.15"
MAC = "192.168.10.25"


class NetworkTopo(Topo):
    "A Simple Network Topology with 1 switch and 2 hosts."

    def build(self, **_opts):
        h1 = self.addHost("h1", ip="1.1.1.10")
        h2 = self.addHost("h2", ip="1.1.1.11")

        s1 = self.addSwitch("s1")

        self.addLink(h1, s1)
        self.addLink(h2, s1)


if __name__ == "__main__":
    setLogLevel("info")
    try:
        topo = NetworkTopo()
        net = Mininet(
            topo=topo,
            waitConnected=True,
            controller=RemoteController,
            autoSetMacs=True,
            cleanup=True,
        )

        net.start()
        CLI(net)
        net.stop()
    except KeyboardInterrupt:
        pass
