name: build_wheel_publish

on:
  release:
    types: [created]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Setup MSYS2 on Windows
        if: startsWith(runner.os, 'Windows')
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git unzip mingw-w64-x86_64-toolchain automake1.16 automake-wrapper autoconf libtool make mingw-w64-x86_64-json-c mingw-w64-x86_64-crt-git

      - name: Install NPCAP OEM on Windows
        if: startsWith(runner.os, 'Windows')
        run: |
           choco install wget --no-progress
           wget --user ${{ secrets.NPCAP_OEM_USERNAME }} --password ${{ secrets.NPCAP_OEM_PASSWORD }} https://npcap.org/oem/dist/npcap-1.60-oem.exe
           Start-Process npcap-1.60-oem.exe -ArgumentList "/loopback_support=yes /winpcap_mode=yes /dot11_support=yes /S" -wait

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.1
        env:
          MSYSTEM: MINGW64
          MSYS2_PATH: D:/a/_temp/msys64
          CIBW_BUILD_FRONTEND: "build"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_BEFORE_ALL_MACOS: brew install autoconf automake libtool pkg-config gettext json-c gcc
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_ARCHS_WINDOWS: auto64
          CIBW_ARCHS_MACOS: x86_64 arm64

      - name: Upload generated wheel
        uses: actions/upload-artifact@v3
        with:
          name: generated_wheels
          path: ./wheelhouse/*.whl

      - name: Publish on Pypi
        if: startsWith(github.ref, 'refs/tags/')
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
           python3 -m pip install --upgrade pip
           python3 -m pip install twine
           python3 -m twine upload --skip-existing ./wheelhouse/nfstream-*.whl